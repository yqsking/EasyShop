<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyShop.Api</name>
    </assembly>
    <members>
        <member name="T:EasyShop.Api.Controllers.CommonController">
            <summary>
            公共模块
            </summary>
        </member>
        <member name="M:EasyShop.Api.Controllers.CommonController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="webHostEnvironment"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:EasyShop.Api.Controllers.CommonController.UploadImages(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            文件上传
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.Controllers.CommonController.DownloadFileAsync(System.String)">
            <summary>
            下载文件接口
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:EasyShop.Api.Controllers.UserController">
            <summary>
            用户模块
            </summary>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.#ctor(MediatR.IMediator,EasyShop.Appliction.Queries.IUserQueries)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
            <param name="userQueries"></param>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.GetUser(System.String)">
            <summary>
            获取指定用户信息
            </summary>
            <param name="id">用户唯一id</param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.GetUserPageList(EasyShop.Appliction.DataTransferModels.User.GetUserPageListRequestDto)">
            <summary>
            分页获取所有用户信息
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.GetExportUserList(EasyShop.Appliction.DataTransferModels.User.GetExportUserListRequestDto)">
            <summary>
            导出符合条件的用户信息
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.UserRegister(EasyShop.Appliction.Commands.User.RegisterUserCommand)">
            <summary>
            用户注册
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.Controllers.UserController.UpdateUser(System.String,EasyShop.Appliction.Commands.User.UpdateUserCommand)">
            <summary>
            更新用户基本资料
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:EasyShop.Api.Filters.AnonymousAttribute">
            <summary>
            匿名登录过滤器
            </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.AnonymousAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:EasyShop.Api.Filters.AuthorizeFilter">
            <summary>
            权限认证过滤器
            </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.AuthorizeFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            登录授权验证
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:EasyShop.Api.Filters.SwaggerExcludeFilter">
             <summary>
            配置请求命令忽略参数
             </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.SwaggerExcludeFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
            应用过滤规则
            </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.SwaggerExcludeFilter.IgnoreField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            配置忽略的属性
            </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.SwaggerExcludeFilter.GetFieldPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            通过lambdaExpression获取属性PropertyInfo
            </summary>
        </member>
        <member name="T:EasyShop.Api.Filters.VerificationFilter">
            <summary>
            dto参数验证过滤器
            </summary>
        </member>
        <member name="M:EasyShop.Api.Filters.VerificationFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EasyShop.Api.Filters.VerificationFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            dto模型参数验证
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:EasyShop.Api.MiddleWare.ExceptionHandlerMiddleWare">
            <summary>
            全局异常处理中间件
            </summary>
        </member>
        <member name="M:EasyShop.Api.MiddleWare.ExceptionHandlerMiddleWare.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{EasyShop.Api.MiddleWare.ExceptionHandlerMiddleWare})">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:EasyShop.Api.MiddleWare.ExceptionHandlerMiddleWare.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EasyShop.Api.MiddleWare.ExceptionHandlerMiddleWare.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.String,System.String)">
            <summary>
            处理异常信息
            </summary>
        </member>
        <member name="T:EasyShop.Api.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:EasyShop.Api.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:EasyShop.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:EasyShop.Api.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:EasyShop.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:EasyShop.Api.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:EasyShop.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EasyShop.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>        
        </member>
    </members>
</doc>
